// @codekit-append "/modules/bubble-menu.js"
// @codekit-append "/modules/chart.js"

$(document).ready(function() {

	function roundNumber(num, dec) {
		var result = Math.round(num*Math.pow(10,dec))/Math.pow(10,dec);
		return result;
	}

	function updatePPL(ev) {
		var current = $(ev.currentTarget).attr('id'),
			cost = $('#ReceiptCost').val(),
			litres = $('#ReceiptLitres').val(),
			ppl = $('#ReceiptPricePerLitre').val();
		
		if((current==='ReceiptCost' || current==='ReceiptLitres') && (cost>0 && litres>0)) {
			$('#ReceiptPricePerLitre').val(roundNumber(cost/litres,3));
		} else if((current==='ReceiptCost' || current==='ReceiptPricePerLitre') && (cost>0 && ppl>0)) {
			$('#ReceiptLitres').val(roundNumber(cost/ppl,2));
		}
	}

	$('#ReceiptCost, #ReceiptLitres, #ReceiptPricePerLitre').on('keydown', updatePPL);

	var setReceiptOdometer = function() {
        var selectedOdometer = $('option:selected',this).attr('data-odometer');
        $('#ReceiptOdometer').attr('placeholder','Previously ' + selectedOdometer);
        $('#ReceiptOdometer').attr('min',selectedOdometer);
	};

     $('#ReceiptVehicleId').on('change', setReceiptOdometer);

});


/* **********************************************
     Begin bubble-menu.js
********************************************** */

/**
 * Bubble off-canvas menu (inspired by http://www.codrops.com)
 */
(function() {

	var bodyEl = document.body,
		content = document.querySelector( '.content-wrap' ),
		openbtn = document.getElementById( 'open-button' ),
		closebtn = document.getElementById( 'close-button' ),
		isOpen = false,

		morphEl = document.getElementById( 'morph-shape' ),
		s = Snap( morphEl.querySelector( 'svg' ) );
		path = s.select( 'path' );
		initialPath = this.path.attr('d'),
		steps = morphEl.getAttribute( 'data-morph-open' ).split(';');
		stepsTotal = steps.length;
		isAnimating = false;

	function init() {
		initEvents();
	}

	function initEvents() {
		openbtn.addEventListener( 'click', toggleMenu );
		if( closebtn ) {
			closebtn.addEventListener( 'click', toggleMenu );
		}

		// close the menu element if the target itÂ´s not the menu element or one of its descendants..
		content.addEventListener( 'click', function(ev) {
			var target = ev.target;
			if( isOpen && target !== openbtn ) {
				toggleMenu();
			}
		} );
	}

	function toggleMenu() {
		if( isAnimating ) return false;
		isAnimating = true;
		if( isOpen ) {
			classie.remove( bodyEl, 'show-menu' );
			// animate path
			setTimeout( function() {
				// reset path
				path.attr( 'd', initialPath );
				isAnimating = false; 
			}, 300 );
		}
		else {
			classie.add( bodyEl, 'show-menu' );
			// animate path
			var pos = 0,
				nextStep = function( pos ) {
					if( pos > stepsTotal - 1 ) {
						isAnimating = false; 
						return;
					}
					path.animate( { 'path' : steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function() { nextStep(pos); } );
					pos++;
				};

			nextStep(pos);
		}
		isOpen = !isOpen;
	}

	init();

})();

/* **********************************************
     Begin chart.js
********************************************** */


var receiptChart = (function receiptsChart() {

	var $receiptsChart = $("#receiptsChart");

	if($receiptsChart.length > 0) {

		// Configure some options
		var options = {
		    scaleShowGridLines : true,
		    scaleGridLineColor : "rgba(0,0,0,0.1)",
		    scaleGridLineWidth : 1,
		    scaleShowHorizontalLines: true,
		    scaleShowVerticalLines: false,
		    bezierCurve : true,
		    bezierCurveTension : 0.4,
		    pointDot : true,
		    pointDotRadius : 4,
		    pointDotStrokeWidth : 1,
		    pointHitDetectionRadius : 20,
		    datasetStroke : true,
		    datasetStrokeWidth : 2,
		    datasetFill : true,
		    legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"
		};
		
		// Establish some data points
		var $table = $('table.chart tr'),
			chart_data = {
				dates : [],
				prices : [],
				totals : []
			};
		
		// Loop through data table
		$($table).each(function(index, row) {
	
			date = $('td:first a', row);
			date_utc = date.data('short');
			if(date_utc!==null) {
			
				chart_data.dates.push(date_utc);
		
				price = $('td:nth-child(3)', row);
				price_float = convertPriceToFloat(price.text());
				if(price_float!==0) chart_data.prices.push(price_float);
		
				total = $('td:nth-child(2)', row);
				total_float = convertPriceToFloat(total.text());
				if(total_float!==0) chart_data.totals.push(total_float);
			}
		});
		
		// Reverse array values
		chart_data.dates.reverse();
		chart_data.prices.reverse();
		chart_data.totals.reverse();
		
		// Compile chart data
		var data = {
			    labels: chart_data.dates,
			    datasets: [
			        {
			            label: "Price",
			            fillColor: "rgba(220,220,220,0.2)",
			            strokeColor: "rgba(220,220,220,1)",
			            pointColor: "rgba(220,220,220,1)",
			            pointStrokeColor: "#fff",
			            pointHighlightFill: "#fff",
			            pointHighlightStroke: "rgba(220,220,220,1)",
			            data: chart_data.prices
			        }
	/*
			        ,
			        {
			            label: "Total",
			            fillColor: "rgba(220,255,220,0.2)",
			            strokeColor: "rgba(220,255,220,1)",
			            pointColor: "rgba(220,255,220,1)",
			            pointStrokeColor: "#cfc",
			            pointHighlightFill: "#cfc",
			            pointHighlightStroke: "rgba(220,255,220,1)",
			            data: chart_data.totals
			        }
	*/
			    ]
		};
		
		// Get context with jQuery - using jQuery's .get() method.
		var ctx = $("#receiptsChart").get(0).getContext("2d");
		// This will get the first returned node in the jQuery collection.
		var myLineChart = new Chart(ctx).Line(data, options);
	}
})();

function convertPriceToFloat(string) {
	return Number(string.replace(/[^0-9\.]+/g,""));
}
